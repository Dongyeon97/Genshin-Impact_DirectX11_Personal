#pragma once

#include "pch.h"
#include "StateMachine.h"

namespace BOSS_PAIZE
{
	const _ullong IS_PAIZE1 = 0x0000000000000000;
	const _ullong IS_PAIZE2 = 0x0000000000000001;
	const _ullong IS_PAIZE3 = 0x0000000000000002;
}

namespace MONSTER_STATE
{
	/* ※ 공격 / 패턴의 우선순위는 숫자가 높을수록 높다고 가정하겠습니다. */

	const _ullong IDLE				= 0x0000000000000000;

	const _ullong PROWL				= 0x0000000000000001;
	const _ullong DETECTED			= 0x0000000000000002;
	const _ullong TRACE				= 0x0000000000000004;

	const _ullong ATTACK1_START		= 0x0000000000000008;
	const _ullong ATTACK1_CYCLE		= 0x0000000000000010;
	const _ullong ATTACK1_END		= 0x0000000000000020;

	const _ullong ATTACK2_START		= 0x0000000000000040;
	const _ullong ATTACK2_CYCLE		= 0x0000000000000080;
	const _ullong ATTACK2_END		= 0x0000000000000100;

	const _ullong ATTACK3_START		= 0x0000000000000200;
	const _ullong ATTACK3_CYCLE		= 0x0000000000000400;
	const _ullong ATTACK3_END		= 0x0000000000000800;

	const _ullong ATTACK4_START		= 0x0000000000001000;
	const _ullong ATTACK4_CYCLE		= 0x0000000000002000;
	const _ullong ATTACK4_END		= 0x0000000000004000;

	const _ullong PATTERN1_START	= 0x0000000000008000;
	const _ullong PATTERN1_CYCLE	= 0x0000000000010000;
	const _ullong PATTERN1_END		= 0x0000000000020000;

	const _ullong PATTERN2_START	= 0x0000000000040000;
	const _ullong PATTERN2_CYCLE	= 0x0000000000080000;
	const _ullong PATTERN2_END		= 0x0000000000100000;

	const _ullong PATTERN3_START	= 0x0000000000200000;
	const _ullong PATTERN3_CYCLE	= 0x0000000000400000;
	const _ullong PATTERN3_END		= 0x0000000000800000;

	const _ullong PATTERN4_START	= 0x0000000001000000;
	const _ullong PATTERN4_CYCLE	= 0x0000000002000000;
	const _ullong PATTERN4_END		= 0x0000000004000000;

	const _ullong HIT1				= 0x0000000008000000;
	const _ullong HIT2				= 0x0000000010000000;
	const _ullong HIT3				= 0x0000000020000000;

	const _ullong DIE1				= 0x0000000040000000;
	const _ullong DIE2				= 0x0000000080000000;
	const _ullong DIE3				= 0x0000000100000000;

	const _ullong ATTACK5_START		= 0x0000000200000000;
	const _ullong ATTACK5_CYCLE		= 0x0000000400000000;
	const _ullong ATTACK5_END		= 0x0000000800000000;

	const _ullong PATTERN5_START	= 0x0000001000000000;
	const _ullong PATTERN5_CYCLE	= 0x0000002000000000;
	const _ullong PATTERN5_END		= 0x0000004000000000;

	const _ullong DETECTED_CYCLE	= 0x0000008000000000;
	const _ullong DETECTED_END		= 0x0000010000000000;

	const _ullong IS_MOVE = PROWL | TRACE;

	const _ullong IS_DETECTED = DETECTED | DETECTED_CYCLE | DETECTED_END;

	const _ullong IS_ATTACK =	ATTACK1_START | ATTACK1_CYCLE | ATTACK1_END |
								ATTACK2_START | ATTACK2_CYCLE | ATTACK2_END |
								ATTACK3_START | ATTACK3_CYCLE | ATTACK3_END |
								ATTACK4_START | ATTACK4_CYCLE | ATTACK4_END |
								ATTACK5_START | ATTACK5_CYCLE | ATTACK5_END |
								PATTERN1_START | PATTERN1_CYCLE | PATTERN1_END |
								PATTERN2_START | PATTERN2_CYCLE | PATTERN2_END |
								PATTERN3_START | PATTERN3_CYCLE | PATTERN3_END |
								PATTERN4_START | PATTERN4_CYCLE | PATTERN4_END |
								PATTERN5_START | PATTERN5_CYCLE | PATTERN5_END;

	const _ullong IS_ATTACK1 =	ATTACK1_START | ATTACK1_CYCLE | ATTACK1_END;
	const _ullong IS_ATTACK2 =	ATTACK2_START | ATTACK2_CYCLE | ATTACK2_END;
	const _ullong IS_ATTACK3 =	ATTACK3_START | ATTACK3_CYCLE | ATTACK3_END;
	const _ullong IS_ATTACK4 =	ATTACK4_START | ATTACK4_CYCLE | ATTACK4_END;
	const _ullong IS_ATTACK5 =	ATTACK5_START | ATTACK5_CYCLE | ATTACK5_END;

	const _ullong IS_PATTERN1 = PATTERN1_START | PATTERN1_CYCLE | PATTERN1_END;
	const _ullong IS_PATTERN2 = PATTERN2_START | PATTERN2_CYCLE | PATTERN2_END;
	const _ullong IS_PATTERN3 = PATTERN3_START | PATTERN3_CYCLE | PATTERN3_END;
	const _ullong IS_PATTERN4 = PATTERN4_START | PATTERN4_CYCLE | PATTERN4_END;
	const _ullong IS_PATTERN5 = PATTERN5_START | PATTERN5_CYCLE | PATTERN5_END;

	const _ullong IS_ATTACK_START	=	ATTACK1_START | ATTACK2_START | ATTACK3_START | ATTACK4_START | ATTACK5_START |
										PATTERN1_START | PATTERN2_START | PATTERN3_START | PATTERN4_START | PATTERN5_START;

	const _ullong IS_ATTACK_CYCLE	=	ATTACK1_CYCLE | ATTACK2_CYCLE | ATTACK3_CYCLE | ATTACK4_CYCLE | ATTACK5_CYCLE |
										PATTERN1_CYCLE | PATTERN2_CYCLE | PATTERN3_CYCLE | PATTERN4_CYCLE | PATTERN5_CYCLE;

	const _ullong IS_ATTACK_END		=	ATTACK1_END | ATTACK2_END | ATTACK3_END | ATTACK4_END | ATTACK5_END |
										PATTERN1_END | PATTERN2_END | PATTERN3_END | PATTERN4_END | PATTERN5_END;

	const _ullong IS_NORMALATTACK = ATTACK1_START | ATTACK1_CYCLE | ATTACK1_END |
									ATTACK2_START | ATTACK2_CYCLE | ATTACK2_END |
									ATTACK3_START | ATTACK3_CYCLE | ATTACK3_END |
									ATTACK4_START | ATTACK4_CYCLE | ATTACK4_END |
									ATTACK5_START | ATTACK5_CYCLE | ATTACK5_END;

	const _ullong IS_PATTERN	=	PATTERN1_START | PATTERN1_CYCLE | PATTERN1_END |
									PATTERN2_START | PATTERN2_CYCLE | PATTERN2_END |
									PATTERN3_START | PATTERN3_CYCLE | PATTERN3_END |
									PATTERN4_START | PATTERN4_CYCLE | PATTERN4_END |
									PATTERN5_START | PATTERN5_CYCLE | PATTERN5_END;

	const _ullong IS_HIT		=	HIT1 | HIT2 | HIT3;

	const _ullong IS_DIE		=	DIE1 | DIE2 | DIE3;
}